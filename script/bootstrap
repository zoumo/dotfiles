#!/bin/bash
#
# bootstrap installs things.

# Exit on error. Append "|| true" if you expect an error.
set -o errexit
# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR
set -o nounset
# Catch the error in pipeline.
set -o pipefail

echo ""
echo "                       _oo0oo_"
echo "                      o8888888o"
echo "                      88' . '88"
echo "                      (| -_- |)"
echo "                      0\  =  /0"
echo "                    ___/\`---'\\___"
echo "                  .' \\\\\\|     |# '."
echo "                 / \\\\\\|||  :  |||# \\"
echo "               / _||||| -:- |||||- \\"
echo "               |   | \\\\\\\\\\  -  #/ |   |"
echo "               | \\_|  ''\\---/''  |_/ |"
echo "               \\  .-\\__  '-'  ___/-. /"
echo "             ___'. .'  /--.--\\  \`. .'___"
echo "          .'' '<  \`.___\\_<|>_/___.' >' ''."
echo "         | | :  \`- \\\`.;\`\\ _ /\`;.\`/ - \` : | |"
echo "         \\  \\ \`_.   \\_ __\\ /__ _/   .-\` /  /"
echo "     =====\`-.____\`.___ \\_____/___.-\`___.-'====="
echo "                       \`=---='"
echo ""
echo "               佛祖保佑         永無BUG"
echo ""
echo "     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo ""
echo ""

ROOT_PATH="$(dirname $(dirname ${BASH_SOURCE}))"
source ${ROOT_PATH}/lib/init.sh

install_ohmyzsh() {
	if [[ ! -d ~/.oh-my-zsh ]]; then
		log::status 'installing oh-my-zsh'
		# sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
		git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
	fi
}

install_dotfiles() {
	log::status 'installing dotfiles'

	local overwrite_all=false backup_all=false skip_all=false
	for src in $(find "$DOT_ROOT/" -maxdepth 2 -name '*.symlink'); do
		dst="$HOME/.$(basename "${src%.*}")"
		util::link_file "$src" "$dst"
	done
}

install_ohmyzsh
install_dotfiles

log::status "installing dependencies"
if ./script/dot; then
	log::status "dependencies installed"
else
	log::error_exit "error installing dependencies"
fi

log::status "The installation is complete !!"

TEST_CURRENT_SHELL=$(expr "$SHELL" : '.*/\(.*\)')
if [ "$TEST_CURRENT_SHELL" != "zsh" ]; then
	# If this platform provides a "chsh" command (not Cygwin), do it, man!
	if util::command_exists chsh; then
		log::status "Time to change your default shell to zsh!"
		chsh -s $(grep "/zsh$" /etc/shells | tail -1)
		# Else, suggest the user do so manually.
	else
		log::status "I can't change your shell automatically because this system does not have chsh."
		log::status "Please manually change your default shell to zsh!"
	fi
fi

env zsh
